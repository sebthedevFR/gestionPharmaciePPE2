<?php

namespace GSB\ObjComBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\QueryBuilder;

/**
 * PharmacieRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PharmacieRepository extends EntityRepository
{
    public function toutesLesPharmacies()
    {
        $qb = $this->createQueryBuilder('p');
        $qry = $qb->getQuery();
        $res = $qry->getResult();
        return $res;
    }

    public function unePharmacie($idpharm)
    {
        $qb = $this->createQueryBuilder('p');

        $qb->where('p.id = :parid')->setParameter('parid', $idpharm);

        return $qb->getQuery()->getResult();
    }

    public function rechercheVilleEtAnneeCreation($ville,$date)
    {
        $qb=$this->createQueryBuilder('p');

        $qb->where('p.ville = :uneVille')->setParameter('uneVille', $ville)->andWhere('p.dateajout > :uneDate')->setParameter('uneDate', $date)->orderBy('p.dateajout', 'DESC');

        return $qb->getQuery()->getResult();
    }

    public function recherchenbPharmVille($ville)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->select('COUNT(p)');
        $qb->where('p.ville = :uneVille')->setParameter('uneVille', $ville);
        return $qb->getQuery()->getSingleScalarResult();
    }

    public function supprimePharmVille($ville)
    {
        $qb = $this->createQueryBuilder('p');
        $qb->update('pharmacie', 'p');
        $qb->where('p.ville',':ville');
        $qb->setParameter(':ville', $ville);
        $qb->getQuery()->execute;
    }

    public function updatePharmVille($ville, $valclient)
    {
        $qb = $this->createQueryBuilder('p')->update('pharmacie','p')->set('p.client', '?1')->where('p.ville',':ville')->setParameter(1,$valclient)->getQuery()->execute;
    }


    public function dernieresPharmaciesCrees($limit)
    {
        //On crée une instance de query builder
        $qb = $this->createQueryBuilder('p');
        //On ne souhaite avoir que les pharmacies de type client
        $qb->where('p.client = :clientoui')->setParameter('clientoui', 1);
        //On trie sur la date d'ajout
        $qb->orderBy('p.dateajout', 'DESC');
        // On limite le nombre d'enregistrement retournés à $limit (le param)
        $qb->setMaxResults($limit);

        // exécution de la requête et le retour du resultat
        return $qb->getQuery()->getResult();
    }
}
